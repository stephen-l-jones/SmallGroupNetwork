% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_configuration.R, R/fit_configuration_set.R
\name{fit_configuration}
\alias{fit_configuration}
\alias{fit_configuration.default}
\alias{fit_configuration_set.default}
\title{Fit configuration to group network}
\usage{
fit_configuration(x, configuration, ...)

\method{fit_configuration}{default}(
  x,
  configuration,
  group_index,
  group_size,
  weights,
  parallel = FALSE,
  ...
)

\method{fit_configuration_set}{default}(
  x,
  configuration_set,
  ties.method = c("all", "first", "last", "random"),
  group_index,
  group_size,
  weights,
  parallel = FALSE,
  ...
)
}
\arguments{
\item{x}{A group network or list of group networks. A group network can be an adjacency
matrix, edge list, \code{igraph} object, or \code{network} object. \code{x} may
also be an edge list for multiple groups when \code{group_index} is provided.}

\item{configuration}{A \code{configuration} object.}

\item{weights}{Numeric vector of edge weights for an edge list. Length should equal the number
of rows in \code{x}.}

\item{input_type}{Used to specify \code{x}. Can be \code{"unspecified"}, \code{"edgelist"}, or
\code{"adjacency"}. If unspecified, the function will guess whether \code{x} is
an edge list or adjacency matrix.}
}
\value{
A \code{configuration_fit} object.
}
\description{
\code{fit_configuration} fits a configuration to group networks and returns
a \code{configuration_fit} object.
}
\details{
\code{fit_configuration} fits a single configuration. To fit multiple
configurations to group networks, see \code{\link{fit_configuration_set}}.
}
\section{Methods (by class)}{
\itemize{
\item \code{default}: Fit configuration to group networks from adjacency
matrix or edge list

\item \code{default}: Fit configuration to group networks from adjacency
matrix or edge list
}}

\examples{
f <- star(4)[[1]]
set.seed(102)
x = list(
  matrix(rnorm(16), 4),
  matrix(rnorm(25), 5)
)
fit_group_network(x, f_list)
f <- star(4)[[1]]
set.seed(102)
x = list(
  matrix(rnorm(16), 4),
  matrix(rnorm(25), 5)
)
fit_group_network(x, f_set)
}
